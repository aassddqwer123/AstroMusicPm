export namespace listInstances {
    const url: string;
    const requestType: string;
    const apiKeyRequired: boolean;
    namespace parameters {
        namespace per_page {
            const type: string;
        }
        namespace cursor {
            const type_1: string;
            export { type_1 as type };
        }
        namespace tag {
            const type_2: string;
            export { type_2 as type };
        }
        namespace label {
            const type_3: string;
            export { type_3 as type };
        }
        namespace main_ip {
            const type_4: string;
            export { type_4 as type };
        }
        namespace region {
            const type_5: string;
            export { type_5 as type };
        }
    }
}
export namespace createInstance {
    const url_1: string;
    export { url_1 as url };
    const requestType_1: string;
    export { requestType_1 as requestType };
    const apiKeyRequired_1: boolean;
    export { apiKeyRequired_1 as apiKeyRequired };
    export namespace parameters_1 {
        export namespace region_1 {
            const type_6: string;
            export { type_6 as type };
            export const required: boolean;
        }
        export { region_1 as region };
        export namespace plan {
            const type_7: string;
            export { type_7 as type };
            const required_1: boolean;
            export { required_1 as required };
        }
        export namespace os_id {
            const type_8: string;
            export { type_8 as type };
        }
        export namespace ipxe_chain_url {
            const type_9: string;
            export { type_9 as type };
        }
        export namespace iso_id {
            const type_10: string;
            export { type_10 as type };
        }
        export namespace script_id {
            const type_11: string;
            export { type_11 as type };
        }
        export namespace snapshot_id {
            const type_12: string;
            export { type_12 as type };
        }
        export namespace enable_ipv6 {
            const type_13: string;
            export { type_13 as type };
        }
        export namespace disable_public_ipv4 {
            const type_14: string;
            export { type_14 as type };
        }
        export namespace attach_vpc {
            const type_15: string;
            export { type_15 as type };
        }
        export namespace attach_vpc2 {
            const type_16: string;
            export { type_16 as type };
        }
        export namespace label_1 {
            const type_17: string;
            export { type_17 as type };
        }
        export { label_1 as label };
        export namespace sshkey_id {
            const type_18: string;
            export { type_18 as type };
        }
        export namespace backups {
            const type_19: string;
            export { type_19 as type };
        }
        export namespace app_id {
            const type_20: string;
            export { type_20 as type };
        }
        export namespace image_id {
            const type_21: string;
            export { type_21 as type };
        }
        export namespace user_data {
            const type_22: string;
            export { type_22 as type };
        }
        export namespace ddos_protection {
            const type_23: string;
            export { type_23 as type };
        }
        export namespace activation_email {
            const type_24: string;
            export { type_24 as type };
        }
        export namespace hostname {
            const type_25: string;
            export { type_25 as type };
        }
        export namespace tag_1 {
            const type_26: string;
            export { type_26 as type };
        }
        export { tag_1 as tag };
        export namespace tags {
            const type_27: string;
            export { type_27 as type };
        }
        export namespace firewall_group_id {
            const type_28: string;
            export { type_28 as type };
        }
        export namespace reserved_ipv4 {
            const type_29: string;
            export { type_29 as type };
        }
        export namespace enable_vpc {
            const type_30: string;
            export { type_30 as type };
        }
        export namespace enable_vpc2 {
            const type_31: string;
            export { type_31 as type };
        }
    }
    export { parameters_1 as parameters };
}
export namespace getInstance {
    const url_2: string;
    export { url_2 as url };
    const requestType_2: string;
    export { requestType_2 as requestType };
    const apiKeyRequired_2: boolean;
    export { apiKeyRequired_2 as apiKeyRequired };
    const parameters_2: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_2 as parameters };
}
export namespace updateInstance {
    const url_3: string;
    export { url_3 as url };
    const requestType_3: string;
    export { requestType_3 as requestType };
    const apiKeyRequired_3: boolean;
    export { apiKeyRequired_3 as apiKeyRequired };
    const parameters_3: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        app_id: {
            type: string;
        };
        image_id: {
            type: string;
        };
        backups: {
            type: string;
        };
        firewall_group_id: {
            type: string;
        };
        enable_ipv6: {
            type: string;
        };
        os_id: {
            type: string;
        };
        user_data: {
            type: string;
        };
        tag: {
            type: string;
        };
        tags: {
            type: string;
        };
        label: {
            type: string;
        };
        plan: {
            type: string;
        };
        ddos_protection: {
            type: string;
        };
        attach_vpc: {
            type: string;
        };
        attach_vpc2: {
            type: string;
        };
        detach_vpc: {
            type: string;
        };
        detach_vpc2: {
            type: string;
        };
        enable_vpc: {
            type: string;
        };
        enable_vpc2: {
            type: string;
        };
    };
    export { parameters_3 as parameters };
}
export namespace deleteInstance {
    const url_4: string;
    export { url_4 as url };
    const requestType_4: string;
    export { requestType_4 as requestType };
    const apiKeyRequired_4: boolean;
    export { apiKeyRequired_4 as apiKeyRequired };
    const parameters_4: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_4 as parameters };
}
export namespace haltInstances {
    const url_5: string;
    export { url_5 as url };
    const requestType_5: string;
    export { requestType_5 as requestType };
    const apiKeyRequired_5: boolean;
    export { apiKeyRequired_5 as apiKeyRequired };
    export namespace parameters_5 {
        namespace instance_ids {
            const type_32: string;
            export { type_32 as type };
        }
    }
    export { parameters_5 as parameters };
}
export namespace rebootInstances {
    const url_6: string;
    export { url_6 as url };
    const requestType_6: string;
    export { requestType_6 as requestType };
    const apiKeyRequired_6: boolean;
    export { apiKeyRequired_6 as apiKeyRequired };
    export namespace parameters_6 {
        export namespace instance_ids_1 {
            const type_33: string;
            export { type_33 as type };
        }
        export { instance_ids_1 as instance_ids };
    }
    export { parameters_6 as parameters };
}
export namespace startInstances {
    const url_7: string;
    export { url_7 as url };
    const requestType_7: string;
    export { requestType_7 as requestType };
    const apiKeyRequired_7: boolean;
    export { apiKeyRequired_7 as apiKeyRequired };
    export namespace parameters_7 {
        export namespace instance_ids_2 {
            const type_34: string;
            export { type_34 as type };
        }
        export { instance_ids_2 as instance_ids };
    }
    export { parameters_7 as parameters };
}
export namespace startInstance {
    const url_8: string;
    export { url_8 as url };
    const requestType_8: string;
    export { requestType_8 as requestType };
    const apiKeyRequired_8: boolean;
    export { apiKeyRequired_8 as apiKeyRequired };
    const parameters_8: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_8 as parameters };
}
export namespace rebootInstance {
    const url_9: string;
    export { url_9 as url };
    const requestType_9: string;
    export { requestType_9 as requestType };
    const apiKeyRequired_9: boolean;
    export { apiKeyRequired_9 as apiKeyRequired };
    const parameters_9: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_9 as parameters };
}
export namespace reinstallInstance {
    const url_10: string;
    export { url_10 as url };
    const requestType_10: string;
    export { requestType_10 as requestType };
    const apiKeyRequired_10: boolean;
    export { apiKeyRequired_10 as apiKeyRequired };
    const parameters_10: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        hostname: {
            type: string;
        };
    };
    export { parameters_10 as parameters };
}
export namespace getInstanceBandwidth {
    const url_11: string;
    export { url_11 as url };
    const requestType_11: string;
    export { requestType_11 as requestType };
    const apiKeyRequired_11: boolean;
    export { apiKeyRequired_11 as apiKeyRequired };
    const parameters_11: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        date_range: {
            type: string;
        };
    };
    export { parameters_11 as parameters };
}
export namespace getInstanceNeighbors {
    const url_12: string;
    export { url_12 as url };
    const requestType_12: string;
    export { requestType_12 as requestType };
    const apiKeyRequired_12: boolean;
    export { apiKeyRequired_12 as apiKeyRequired };
    const parameters_12: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_12 as parameters };
}
export namespace listInstanceVpc2 {
    const url_13: string;
    export { url_13 as url };
    const requestType_13: string;
    export { requestType_13 as requestType };
    const apiKeyRequired_13: boolean;
    export { apiKeyRequired_13 as apiKeyRequired };
    const parameters_13: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        per_page: {
            type: string;
        };
        cursor: {
            type: string;
        };
    };
    export { parameters_13 as parameters };
}
export namespace listInstanceVpcs {
    const url_14: string;
    export { url_14 as url };
    const requestType_14: string;
    export { requestType_14 as requestType };
    const apiKeyRequired_14: boolean;
    export { apiKeyRequired_14 as apiKeyRequired };
    const parameters_14: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        per_page: {
            type: string;
        };
        cursor: {
            type: string;
        };
    };
    export { parameters_14 as parameters };
}
export namespace getInstanceIsoStatus {
    const url_15: string;
    export { url_15 as url };
    const requestType_15: string;
    export { requestType_15 as requestType };
    const apiKeyRequired_15: boolean;
    export { apiKeyRequired_15 as apiKeyRequired };
    const parameters_15: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_15 as parameters };
}
export namespace attachIsoToInstance {
    const url_16: string;
    export { url_16 as url };
    const requestType_16: string;
    export { requestType_16 as requestType };
    const apiKeyRequired_16: boolean;
    export { apiKeyRequired_16 as apiKeyRequired };
    const parameters_16: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        iso_id: {
            type: string;
        };
    };
    export { parameters_16 as parameters };
}
export namespace detachIsoFromInstance {
    const url_17: string;
    export { url_17 as url };
    const requestType_17: string;
    export { requestType_17 as requestType };
    const apiKeyRequired_17: boolean;
    export { apiKeyRequired_17 as apiKeyRequired };
    const parameters_17: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_17 as parameters };
}
export namespace attachVpcToInstance {
    const url_18: string;
    export { url_18 as url };
    const requestType_18: string;
    export { requestType_18 as requestType };
    const apiKeyRequired_18: boolean;
    export { apiKeyRequired_18 as apiKeyRequired };
    const parameters_18: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        vpc_id: {
            type: string;
        };
    };
    export { parameters_18 as parameters };
}
export namespace detachVpcFromInstance {
    const url_19: string;
    export { url_19 as url };
    const requestType_19: string;
    export { requestType_19 as requestType };
    const apiKeyRequired_19: boolean;
    export { apiKeyRequired_19 as apiKeyRequired };
    const parameters_19: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        vpc_id: {
            type: string;
        };
    };
    export { parameters_19 as parameters };
}
export namespace attachVpc2ToInstance {
    const url_20: string;
    export { url_20 as url };
    const requestType_20: string;
    export { requestType_20 as requestType };
    const apiKeyRequired_20: boolean;
    export { apiKeyRequired_20 as apiKeyRequired };
    const parameters_20: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        vpc_id: {
            type: string;
        };
    };
    export { parameters_20 as parameters };
}
export namespace detachVpc2FromInstance {
    const url_21: string;
    export { url_21 as url };
    const requestType_21: string;
    export { requestType_21 as requestType };
    const apiKeyRequired_21: boolean;
    export { apiKeyRequired_21 as apiKeyRequired };
    const parameters_21: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        vpc_id: {
            type: string;
        };
    };
    export { parameters_21 as parameters };
}
export namespace setInstanceBackupSchedule {
    const url_22: string;
    export { url_22 as url };
    const requestType_22: string;
    export { requestType_22 as requestType };
    const apiKeyRequired_22: boolean;
    export { apiKeyRequired_22 as apiKeyRequired };
    const parameters_22: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        type: {
            type: string;
            required: boolean;
        };
        hour: {
            type: string;
        };
        dow: {
            type: string;
        };
        dom: {
            type: string;
        };
    };
    export { parameters_22 as parameters };
}
export namespace getInstanceBackupSchedule {
    const url_23: string;
    export { url_23 as url };
    const requestType_23: string;
    export { requestType_23 as requestType };
    const apiKeyRequired_23: boolean;
    export { apiKeyRequired_23 as apiKeyRequired };
    const parameters_23: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_23 as parameters };
}
export namespace restoreInstance {
    const url_24: string;
    export { url_24 as url };
    const requestType_24: string;
    export { requestType_24 as requestType };
    const apiKeyRequired_24: boolean;
    export { apiKeyRequired_24 as apiKeyRequired };
    const parameters_24: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        backup_id: {
            type: string;
        };
        snapshot_id: {
            type: string;
        };
    };
    export { parameters_24 as parameters };
}
export namespace listInstanceIpv4Information {
    const url_25: string;
    export { url_25 as url };
    const requestType_25: string;
    export { requestType_25 as requestType };
    const apiKeyRequired_25: boolean;
    export { apiKeyRequired_25 as apiKeyRequired };
    const parameters_25: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        public_network: {
            type: string;
        };
        per_page: {
            type: string;
        };
        cursor: {
            type: string;
        };
    };
    export { parameters_25 as parameters };
}
export namespace createInstanceIpv4 {
    const url_26: string;
    export { url_26 as url };
    const requestType_26: string;
    export { requestType_26 as requestType };
    const apiKeyRequired_26: boolean;
    export { apiKeyRequired_26 as apiKeyRequired };
    const parameters_26: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        reboot: {
            type: string;
        };
    };
    export { parameters_26 as parameters };
}
export namespace getInstanceIpv6Information {
    const url_27: string;
    export { url_27 as url };
    const requestType_27: string;
    export { requestType_27 as requestType };
    const apiKeyRequired_27: boolean;
    export { apiKeyRequired_27 as apiKeyRequired };
    const parameters_27: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_27 as parameters };
}
export namespace createInstanceReverseIpv6 {
    const url_28: string;
    export { url_28 as url };
    const requestType_28: string;
    export { requestType_28 as requestType };
    const apiKeyRequired_28: boolean;
    export { apiKeyRequired_28 as apiKeyRequired };
    const parameters_28: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        ip: {
            type: string;
            required: boolean;
        };
        reverse: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_28 as parameters };
}
export namespace listInstanceIpv6ReverseInformation {
    const url_29: string;
    export { url_29 as url };
    const requestType_29: string;
    export { requestType_29 as requestType };
    const apiKeyRequired_29: boolean;
    export { apiKeyRequired_29 as apiKeyRequired };
    const parameters_29: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_29 as parameters };
}
export namespace createInstanceReverseIpv4 {
    const url_30: string;
    export { url_30 as url };
    const requestType_30: string;
    export { requestType_30 as requestType };
    const apiKeyRequired_30: boolean;
    export { apiKeyRequired_30 as apiKeyRequired };
    const parameters_30: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        ip: {
            type: string;
            required: boolean;
        };
        reverse: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_30 as parameters };
}
export namespace getInstanceUserData {
    const url_31: string;
    export { url_31 as url };
    const requestType_31: string;
    export { requestType_31 as requestType };
    const apiKeyRequired_31: boolean;
    export { apiKeyRequired_31 as apiKeyRequired };
    const parameters_31: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_31 as parameters };
}
export namespace haltInstance {
    const url_32: string;
    export { url_32 as url };
    const requestType_32: string;
    export { requestType_32 as requestType };
    const apiKeyRequired_32: boolean;
    export { apiKeyRequired_32 as apiKeyRequired };
    const parameters_32: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_32 as parameters };
}
export namespace setDefaultReverseDnsEntry {
    const url_33: string;
    export { url_33 as url };
    const requestType_33: string;
    export { requestType_33 as requestType };
    const apiKeyRequired_33: boolean;
    export { apiKeyRequired_33 as apiKeyRequired };
    const parameters_33: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        ip: {
            type: string;
        };
    };
    export { parameters_33 as parameters };
}
export namespace deleteIpv4Address {
    const url_34: string;
    export { url_34 as url };
    const requestType_34: string;
    export { requestType_34 as requestType };
    const apiKeyRequired_34: boolean;
    export { apiKeyRequired_34 as apiKeyRequired };
    const parameters_34: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        ipv4: {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_34 as parameters };
}
export namespace deleteInstanceReverseIpv6 {
    const url_35: string;
    export { url_35 as url };
    const requestType_35: string;
    export { requestType_35 as requestType };
    const apiKeyRequired_35: boolean;
    export { apiKeyRequired_35 as apiKeyRequired };
    const parameters_35: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        ipv6: {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_35 as parameters };
}
export namespace getAvailableInstanceUpgrades {
    const url_36: string;
    export { url_36 as url };
    const requestType_36: string;
    export { requestType_36 as requestType };
    const apiKeyRequired_36: boolean;
    export { apiKeyRequired_36 as apiKeyRequired };
    const parameters_36: {
        'instance-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        type: {
            type: string;
        };
    };
    export { parameters_36 as parameters };
}
