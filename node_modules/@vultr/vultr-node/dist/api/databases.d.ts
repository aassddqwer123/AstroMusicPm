export namespace listPlans {
    const url: string;
    const requestType: string;
    const apiKeyRequired: boolean;
    namespace parameters {
        namespace engine {
            const type: string;
        }
        namespace nodes {
            const type_1: string;
            export { type_1 as type };
        }
        namespace region {
            const type_2: string;
            export { type_2 as type };
        }
    }
}
export namespace listDatabases {
    const url_1: string;
    export { url_1 as url };
    const requestType_1: string;
    export { requestType_1 as requestType };
    const apiKeyRequired_1: boolean;
    export { apiKeyRequired_1 as apiKeyRequired };
    export namespace parameters_1 {
        export namespace label {
            const type_3: string;
            export { type_3 as type };
        }
        export namespace tag {
            const type_4: string;
            export { type_4 as type };
        }
        export namespace region_1 {
            const type_5: string;
            export { type_5 as type };
        }
        export { region_1 as region };
    }
    export { parameters_1 as parameters };
}
export namespace createDatabase {
    const url_2: string;
    export { url_2 as url };
    const requestType_2: string;
    export { requestType_2 as requestType };
    const apiKeyRequired_2: boolean;
    export { apiKeyRequired_2 as apiKeyRequired };
    export namespace parameters_2 {
        export namespace database_engine {
            const type_6: string;
            export { type_6 as type };
            export const required: boolean;
        }
        export namespace database_engine_version {
            const type_7: string;
            export { type_7 as type };
            const required_1: boolean;
            export { required_1 as required };
        }
        export namespace region_2 {
            const type_8: string;
            export { type_8 as type };
            const required_2: boolean;
            export { required_2 as required };
        }
        export { region_2 as region };
        export namespace plan {
            const type_9: string;
            export { type_9 as type };
            const required_3: boolean;
            export { required_3 as required };
        }
        export namespace label_1 {
            const type_10: string;
            export { type_10 as type };
            const required_4: boolean;
            export { required_4 as required };
        }
        export { label_1 as label };
        export namespace tag_1 {
            const type_11: string;
            export { type_11 as type };
        }
        export { tag_1 as tag };
        export namespace maintenance_dow {
            const type_12: string;
            export { type_12 as type };
        }
        export namespace maintenance_time {
            const type_13: string;
            export { type_13 as type };
        }
        export namespace trusted_ips {
            const type_14: string;
            export { type_14 as type };
        }
        export namespace mysql_sql_modes {
            const type_15: string;
            export { type_15 as type };
        }
        export namespace mysql_require_primary_key {
            const type_16: string;
            export { type_16 as type };
        }
        export namespace mysql_slow_query_log {
            const type_17: string;
            export { type_17 as type };
        }
        export namespace mysql_long_query_time {
            const type_18: string;
            export { type_18 as type };
        }
        export namespace redis_eviction_policy {
            const type_19: string;
            export { type_19 as type };
        }
    }
    export { parameters_2 as parameters };
}
export namespace getDatabase {
    const url_3: string;
    export { url_3 as url };
    const requestType_3: string;
    export { requestType_3 as requestType };
    const apiKeyRequired_3: boolean;
    export { apiKeyRequired_3 as apiKeyRequired };
    const parameters_3: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_3 as parameters };
}
export namespace updateDatabase {
    const url_4: string;
    export { url_4 as url };
    const requestType_4: string;
    export { requestType_4 as requestType };
    const apiKeyRequired_4: boolean;
    export { apiKeyRequired_4 as apiKeyRequired };
    const parameters_4: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        region: {
            type: string;
        };
        plan: {
            type: string;
        };
        label: {
            type: string;
        };
        tag: {
            type: string;
        };
        maintenance_dow: {
            type: string;
        };
        maintenance_time: {
            type: string;
        };
        cluster_time_zone: {
            type: string;
        };
        trusted_ips: {
            type: string;
        };
        mysql_sql_modes: {
            type: string;
        };
        mysql_require_primary_key: {
            type: string;
        };
        mysql_slow_query_log: {
            type: string;
        };
        mysql_long_query_time: {
            type: string;
        };
        redis_eviction_policy: {
            type: string;
        };
    };
    export { parameters_4 as parameters };
}
export namespace deleteDatabase {
    const url_5: string;
    export { url_5 as url };
    const requestType_5: string;
    export { requestType_5 as requestType };
    const apiKeyRequired_5: boolean;
    export { apiKeyRequired_5 as apiKeyRequired };
    const parameters_5: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_5 as parameters };
}
export namespace listDatabaseUsers {
    const url_6: string;
    export { url_6 as url };
    const requestType_6: string;
    export { requestType_6 as requestType };
    const apiKeyRequired_6: boolean;
    export { apiKeyRequired_6 as apiKeyRequired };
    const parameters_6: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_6 as parameters };
}
export namespace createDatabaseUser {
    const url_7: string;
    export { url_7 as url };
    const requestType_7: string;
    export { requestType_7 as requestType };
    const apiKeyRequired_7: boolean;
    export { apiKeyRequired_7 as apiKeyRequired };
    const parameters_7: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        username: {
            type: string;
            required: boolean;
        };
        password: {
            type: string;
        };
        encryption: {
            type: string;
        };
    };
    export { parameters_7 as parameters };
}
export namespace getDatabaseUser {
    const url_8: string;
    export { url_8 as url };
    const requestType_8: string;
    export { requestType_8 as requestType };
    const apiKeyRequired_8: boolean;
    export { apiKeyRequired_8 as apiKeyRequired };
    const parameters_8: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        username: {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_8 as parameters };
}
export namespace updateDatabaseUser {
    const url_9: string;
    export { url_9 as url };
    const requestType_9: string;
    export { requestType_9 as requestType };
    const apiKeyRequired_9: boolean;
    export { apiKeyRequired_9 as apiKeyRequired };
    const parameters_9: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        username: {
            type: string;
            path: boolean;
            required: boolean;
        };
        password: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_9 as parameters };
}
export namespace deleteDatabaseUser {
    const url_10: string;
    export { url_10 as url };
    const requestType_10: string;
    export { requestType_10 as requestType };
    const apiKeyRequired_10: boolean;
    export { apiKeyRequired_10 as apiKeyRequired };
    const parameters_10: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        username: {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_10 as parameters };
}
export namespace listDatabaseDbs {
    const url_11: string;
    export { url_11 as url };
    const requestType_11: string;
    export { requestType_11 as requestType };
    const apiKeyRequired_11: boolean;
    export { apiKeyRequired_11 as apiKeyRequired };
    const parameters_11: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_11 as parameters };
}
export namespace createDatabaseDb {
    const url_12: string;
    export { url_12 as url };
    const requestType_12: string;
    export { requestType_12 as requestType };
    const apiKeyRequired_12: boolean;
    export { apiKeyRequired_12 as apiKeyRequired };
    const parameters_12: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        name: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_12 as parameters };
}
export namespace getDatabaseDb {
    const url_13: string;
    export { url_13 as url };
    const requestType_13: string;
    export { requestType_13 as requestType };
    const apiKeyRequired_13: boolean;
    export { apiKeyRequired_13 as apiKeyRequired };
    const parameters_13: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        'db-name': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_13 as parameters };
}
export namespace deleteDatabaseDb {
    const url_14: string;
    export { url_14 as url };
    const requestType_14: string;
    export { requestType_14 as requestType };
    const apiKeyRequired_14: boolean;
    export { apiKeyRequired_14 as apiKeyRequired };
    const parameters_14: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        'db-name': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_14 as parameters };
}
export namespace listMaintenanceUpdates {
    const url_15: string;
    export { url_15 as url };
    const requestType_15: string;
    export { requestType_15 as requestType };
    const apiKeyRequired_15: boolean;
    export { apiKeyRequired_15 as apiKeyRequired };
    const parameters_15: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_15 as parameters };
}
export namespace startMaintenanceUpdates {
    const url_16: string;
    export { url_16 as url };
    const requestType_16: string;
    export { requestType_16 as requestType };
    const apiKeyRequired_16: boolean;
    export { apiKeyRequired_16 as apiKeyRequired };
    const parameters_16: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_16 as parameters };
}
export namespace listServiceAlerts {
    const url_17: string;
    export { url_17 as url };
    const requestType_17: string;
    export { requestType_17 as requestType };
    const apiKeyRequired_17: boolean;
    export { apiKeyRequired_17 as apiKeyRequired };
    const parameters_17: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        period: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_17 as parameters };
}
export namespace viewMigrationStatus {
    const url_18: string;
    export { url_18 as url };
    const requestType_18: string;
    export { requestType_18 as requestType };
    const apiKeyRequired_18: boolean;
    export { apiKeyRequired_18 as apiKeyRequired };
    const parameters_18: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_18 as parameters };
}
export namespace databaseStartMigration {
    const url_19: string;
    export { url_19 as url };
    const requestType_19: string;
    export { requestType_19 as requestType };
    const apiKeyRequired_19: boolean;
    export { apiKeyRequired_19 as apiKeyRequired };
    const parameters_19: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        host: {
            type: string;
            required: boolean;
        };
        port: {
            type: string;
            required: boolean;
        };
        username: {
            type: string;
            required: boolean;
        };
        password: {
            type: string;
            required: boolean;
        };
        database: {
            type: string;
        };
        ignored_databases: {
            type: string;
        };
        ssl: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_19 as parameters };
}
export namespace databaseDetachMigration {
    const url_20: string;
    export { url_20 as url };
    const requestType_20: string;
    export { requestType_20 as requestType };
    const apiKeyRequired_20: boolean;
    export { apiKeyRequired_20 as apiKeyRequired };
    const parameters_20: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_20 as parameters };
}
export namespace databaseAddReadReplica {
    const url_21: string;
    export { url_21 as url };
    const requestType_21: string;
    export { requestType_21 as requestType };
    const apiKeyRequired_21: boolean;
    export { apiKeyRequired_21 as apiKeyRequired };
    const parameters_21: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        region: {
            type: string;
            required: boolean;
        };
        label: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_21 as parameters };
}
export namespace getBackupInformation {
    const url_22: string;
    export { url_22 as url };
    const requestType_22: string;
    export { requestType_22 as requestType };
    const apiKeyRequired_22: boolean;
    export { apiKeyRequired_22 as apiKeyRequired };
    const parameters_22: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_22 as parameters };
}
export namespace databaseRestoreFromBackup {
    const url_23: string;
    export { url_23 as url };
    const requestType_23: string;
    export { requestType_23 as requestType };
    const apiKeyRequired_23: boolean;
    export { apiKeyRequired_23 as apiKeyRequired };
    const parameters_23: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        label: {
            type: string;
            required: boolean;
        };
        type: {
            type: string;
        };
        date: {
            type: string;
        };
        time: {
            type: string;
        };
    };
    export { parameters_23 as parameters };
}
export namespace databaseFork {
    const url_24: string;
    export { url_24 as url };
    const requestType_24: string;
    export { requestType_24 as requestType };
    const apiKeyRequired_24: boolean;
    export { apiKeyRequired_24 as apiKeyRequired };
    const parameters_24: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        label: {
            type: string;
            required: boolean;
        };
        region: {
            type: string;
            required: boolean;
        };
        plan: {
            type: string;
            required: boolean;
        };
        type: {
            type: string;
        };
        date: {
            type: string;
        };
        time: {
            type: string;
        };
    };
    export { parameters_24 as parameters };
}
export namespace listConnectionPools {
    const url_25: string;
    export { url_25 as url };
    const requestType_25: string;
    export { requestType_25 as requestType };
    const apiKeyRequired_25: boolean;
    export { apiKeyRequired_25 as apiKeyRequired };
    const parameters_25: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_25 as parameters };
}
export namespace createConnectionPool {
    const url_26: string;
    export { url_26 as url };
    const requestType_26: string;
    export { requestType_26 as requestType };
    const apiKeyRequired_26: boolean;
    export { apiKeyRequired_26 as apiKeyRequired };
    const parameters_26: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        name: {
            type: string;
            required: boolean;
        };
        database: {
            type: string;
            required: boolean;
        };
        username: {
            type: string;
            required: boolean;
        };
        mode: {
            type: string;
            required: boolean;
        };
        size: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_26 as parameters };
}
export namespace getConnectionPool {
    const url_27: string;
    export { url_27 as url };
    const requestType_27: string;
    export { requestType_27 as requestType };
    const apiKeyRequired_27: boolean;
    export { apiKeyRequired_27 as apiKeyRequired };
    const parameters_27: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        'pool-name': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_27 as parameters };
}
export namespace updateConnectionPool {
    const url_28: string;
    export { url_28 as url };
    const requestType_28: string;
    export { requestType_28 as requestType };
    const apiKeyRequired_28: boolean;
    export { apiKeyRequired_28 as apiKeyRequired };
    const parameters_28: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        'pool-name': {
            type: string;
            path: boolean;
            required: boolean;
        };
        database: {
            type: string;
        };
        username: {
            type: string;
        };
        mode: {
            type: string;
        };
        size: {
            type: string;
        };
    };
    export { parameters_28 as parameters };
}
export namespace deleteConnectionPool {
    const url_29: string;
    export { url_29 as url };
    const requestType_29: string;
    export { requestType_29 as requestType };
    const apiKeyRequired_29: boolean;
    export { apiKeyRequired_29 as apiKeyRequired };
    const parameters_29: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        'pool-name': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_29 as parameters };
}
export namespace listAdvancedOptions {
    const url_30: string;
    export { url_30 as url };
    const requestType_30: string;
    export { requestType_30 as requestType };
    const apiKeyRequired_30: boolean;
    export { apiKeyRequired_30 as apiKeyRequired };
    const parameters_30: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_30 as parameters };
}
export namespace updateAdvancedOptions {
    const url_31: string;
    export { url_31 as url };
    const requestType_31: string;
    export { requestType_31 as requestType };
    const apiKeyRequired_31: boolean;
    export { apiKeyRequired_31 as apiKeyRequired };
    const parameters_31: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        autovacuum_analyze_scale_factor: {
            type: string;
        };
        autovacuum_analyze_threshold: {
            type: string;
        };
        autovacuum_freeze_max_age: {
            type: string;
        };
        autovacuum_max_workers: {
            type: string;
        };
        autovacuum_naptime: {
            type: string;
        };
        autovacuum_vacuum_cost_delay: {
            type: string;
        };
        autovacuum_vacuum_cost_limit: {
            type: string;
        };
        autovacuum_vacuum_scale_factor: {
            type: string;
        };
        autovacuum_vacuum_threshold: {
            type: string;
        };
        bgwriter_delay: {
            type: string;
        };
        bgwriter_flush_after: {
            type: string;
        };
        bgwriter_lru_maxpages: {
            type: string;
        };
        bgwriter_lru_multiplier: {
            type: string;
        };
        deadlock_timeout: {
            type: string;
        };
        default_toast_compression: {
            type: string;
        };
        idle_in_transaction_session_timeout: {
            type: string;
        };
        jit: {
            type: string;
        };
        log_autovacuum_min_duration: {
            type: string;
        };
        log_error_verbosity: {
            type: string;
        };
        log_line_prefix: {
            type: string;
        };
        log_min_duration_statement: {
            type: string;
        };
        max_files_per_process: {
            type: string;
        };
        max_locks_per_transaction: {
            type: string;
        };
        max_logical_replication_workers: {
            type: string;
        };
        max_parallel_workers: {
            type: string;
        };
        max_parallel_workers_per_gather: {
            type: string;
        };
        max_pred_locks_per_transaction: {
            type: string;
        };
        max_prepared_transactions: {
            type: string;
        };
        max_replication_slots: {
            type: string;
        };
        max_stack_depth: {
            type: string;
        };
        max_standby_archive_delay: {
            type: string;
        };
        max_standby_streaming_delay: {
            type: string;
        };
        max_wal_senders: {
            type: string;
        };
        max_worker_processes: {
            type: string;
        };
        'pg_partman_bgw.interval': {
            type: string;
        };
        'pg_partman_bgw.role': {
            type: string;
        };
        'pg_stat_statements.track': {
            type: string;
        };
        temp_file_limit: {
            type: string;
        };
        track_activity_query_size: {
            type: string;
        };
        track_commit_timestamp: {
            type: string;
        };
        track_functions: {
            type: string;
        };
        track_io_timing: {
            type: string;
        };
        wal_sender_timeout: {
            type: string;
        };
        wal_writer_delay: {
            type: string;
        };
    };
    export { parameters_31 as parameters };
}
export namespace listAvailableVersions {
    const url_32: string;
    export { url_32 as url };
    const requestType_32: string;
    export { requestType_32 as requestType };
    const apiKeyRequired_32: boolean;
    export { apiKeyRequired_32 as apiKeyRequired };
    const parameters_32: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
    };
    export { parameters_32 as parameters };
}
export namespace startVersionUpgrade {
    const url_33: string;
    export { url_33 as url };
    const requestType_33: string;
    export { requestType_33 as requestType };
    const apiKeyRequired_33: boolean;
    export { apiKeyRequired_33 as apiKeyRequired };
    const parameters_33: {
        'database-id': {
            type: string;
            path: boolean;
            required: boolean;
        };
        version: {
            type: string;
            required: boolean;
        };
    };
    export { parameters_33 as parameters };
}
